generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  pv        Int?      @db.TinyInt
  status    Int?      @db.TinyInt
  email     String?   @unique @db.VarChar(75)
  document  String?   @db.VarChar(14)
  password  String?   @db.VarChar(60)
  name      String?   @db.VarChar(75)
  phone     String?   @db.VarChar(11)
  avatar    String?   @db.VarChar(255)
  createdAt DateTime? @default(now()) @db.DateTime(0)
  updatedAt DateTime? @updatedAt

  // Bank Bank[]

  UserChrage UserChrage[]

  @@map("user")
}

model Charge {
  id Int @id @default(autoincrement())

  // userId       Int
  name        String?   @db.VarChar(75)
  description String?   @db.Text
  status      Int?      @db.TinyInt
  value       Decimal?  @db.Decimal(7, 2)
  code        Int?      @db.Int
  dueDate     String?   @db.VarChar(10)
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt

  // User          User           @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  UserChrage UserChrage[]

  @@map("charge")
}

model UserChrage {
  id        Int    @id @default(autoincrement())
  id_User   Int
  user      User   @relation(fields: [id_User], references: [id])
  id_Charge Int
  charge    Charge @relation(fields: [id_Charge], references: [id])

  @@map("user_charge")
}

model Bank {
  id      Int     @id @default(autoincrement())
  bank    String? @db.VarChar(25)
  account String? @db.VarChar(10)
  agency  String? @db.VarChar(10)

  @@map("bank")
}
